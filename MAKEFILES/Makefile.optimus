SHELL=/bin/bash

INCLUDE_DIR=../include
SOURCE_DIR=./src
OBJECTS_DIR=./obj
EXAMPLES_DIR=./examples

CC=icc
CFLAGS=-O3 -openmp -Wall -D_USE_FLOAT -I$(INCLUDE_DIR) #-D__DEBUG
LIBS=-lOpenCL -lm



# required input and data files.
INPUTS= argon_108.inp argon_2916.inp argon_78732.inp \
	argon_108.rest argon_2916.rest argon_78732.rest

# baseline sources
ALL=ljmd-cl.x
# ALL=ljmd-c1.x ljmd-cl.x

all: $(ALL) input $(BASE)

.SUFFIXES:
.SUFFIXES: .c .f90 .x
.PHONY: all clean bench input

input: $(INPUTS)

$(INPUTS): 
	ln -s ../examples/$@ $@

bench: all $(INPUTS)
	@echo ========================================== >  ljmd.time 
	@for s in c c0 c1 c2 c3 c4 f f0 f1 f2 f3 f4 cc fc; do \
	  echo ========================================== >> ljmd.time ; \
	  echo ljmd-$$s.x 108 atoms                       >> ljmd.time ; \
	  ( env OMP_NUM_THREADS=4 time ./ljmd-$$s.x < argon_108.inp )  2>> ljmd.time ; \
	done
	@echo ========================================== >> ljmd.time 
	@for s in c c0 c1 c2 c3 c4 f f0 f1 f2 f3 f4 cc fc; do \
	  echo ========================================== >> ljmd.time ; \
	  echo ljmd-$$s.x 2916 atoms                      >> ljmd.time ; \
	  ( env OMP_NUM_THREADS=4 time ./ljmd-$$s.x < argon_2916.inp ) 2>> ljmd.time ; \
	done
	@echo ========================================== >> ljmd.time 

clean:
	-rm -f $(ALL) *.o *.mod *~ fort.* argon_108.dat  argon_108.xyz	\
	lj_108.restart lj_108.xyz log.lj_108 argon_108.gmon			\
	argon_108.prof argon_2916.dat argon_2916.xyz log.lammps		\
	lj_2916.restart lj_2916.xyz log.lj_2916 $(INPUTS) $(BASE)



# THE ORIGINAL CODE
ljmd-c1.x: ljmd-c1.o
	$(CC) $(CFLAGS) -o $(SOURCE_DIR)/ljmd-c1.x $(OBJECTS_DIR)/ljmd-c1.o $(LIBS)

ljmd-c1.o: $(SOURCE_DIR)/ljmd-c1.c
	$(CC) $(CFLAGS) -c $(SOURCE_DIR)/ljmd-c1.c -o $(OBJECTS_DIR)/ljmd-c1.o



# THE OPENCL VERSION
ljmd-cl.x: ljmd-cl.o OpenCL_utils.o
	$(CC) $(CFLAGS) -o ljmd-cl.x ljmd-cl.o OpenCL_utils.o $(LIBS)

ljmd-cl.o: ljmd-cl.c
	$(CC) $(CFLAGS) -c ljmd-cl.c

OpenCL_utils.o: OpenCL_utils.c
	$(CC) $(CFLAGS) -c OpenCL_utils.c
