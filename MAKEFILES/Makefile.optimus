###################################################
########### makefile for NVidia Optimus ###########
###################################################

CC=icc

# Flags for Include, Optimization, Parallelism and Debug
IFLAGS= -I./include
OFLAGS= -O3 #-D_USE_FLOAT
PFLAGS= -openmp
DFLAGS= -Wall -D__DEBUG
CFLAGS= $(IFLAGS) $(OFLAGS) $(PFLAGS) $(DFLAGS)

LIBS=-lOpenCL -lm



#Directories
SRC_DIR=src
OBJ_DIR=obj
INC_DIR=include

EXE=ljmd_CL
CODE_FILES	= ljmd-cl.c OpenCL_utils.c
HEADER_FILES	= OpenCL_utils.h OpenCL_data.h opencl_kernels_as_string.h

OBJECTS	=$(patsubst %,$(OBJ_DIR)/%,$(CODE_FILES:.c=.o))
INCLUDES=$(patsubst %,$(INC_DIR)/%,$(HEADER_FILES))



TEST_DIR=test
ORI_SRC_DIC=$(TEST_DIR)/src
.PHONY : clean test

$(EXE): $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@ $(LIBS)

$(OBJ_DIR)/%.o:$(SRC_DIR)/%.c $(INCLUDES)
	$(CC) $(CFLAGS) $< -o $@ -c

run: $(EXE)
	cp $(EXE) $(TEST_DIR)/ ; cd $(TEST_DIR) ; make run

optirun: $(EXE)
	cp $(EXE) $(TEST_DIR)/ ; cd $(TEST_DIR) ; make optirun

$(INC_DIR)/opencl_kernels_as_string.h: $(SRC_DIR)/opencl_kernels.cl
	awk '{print "\""$$0"\\n\""}' <$< >$@

test:
	cd $(TEST_DIR); make
clean:
	rm -f $(EXE) $(OBJECTS) $(INC_DIR)/opencl_kernels_as_string.h
	cd $(TEST_DIR); make clean

#inputs and Benchmarks
# required input and data files.
INPUTS= argon_108.inp argon_2916.inp argon_78732.inp \
	argon_108.rest argon_2916.rest argon_78732.rest
